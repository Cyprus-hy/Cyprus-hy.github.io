<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[搭建个人博客的简易教程]]></title>
    <url>%2F2018%2F10%2F05%2FTips-for-Building-Personal-Blog%2F</url>
    <content type="text"><![CDATA[写在前面其实很早就有搭建自己的专属博客的想法，一方面是希望用博客及时记录下自己在学习上的收获，方便复习；另一方面则是觉得自己似乎陷入了一种“快餐文化”，很多书、影视剧明明看过，但过不了两天就忘得一干二净了，真的就像那句话说的：I see that, but just see. 所以也希望自己能通过博客分享一些自己的人生感悟啥的，让自己变得勤于思考一些。 好了，接下来进入正题——如何让小白能在短时间内搭出一个让自己满意的博客，从零开始显然不是我们的风格，现在都8102年了，早已是开源的时代，网上有那么多好的框架我们当然得利用起来，所以本篇教程是以Github Pages为服务器支撑、Hexo的next主题背景为基础的，力求做到简单易上手。（PS：搭建我自己的博客我大概是用了一天多点，但其中大部分时间是花在了主题next的优化上，因为原生的next看起来会比较朴素，需要自己根据需要再往里面加功能，这个我会在下一篇博文中给出详细教程） 搭建个人博客 几点注意事项 1.以下所有关于npm install与hexo的命令行指令都是在hexo的blog目录下完成 2.配置文件_config.yml对格式要求很高，修改的时候注意每一个属性的冒号后有一个空格 准备工作首先我们需要安装好Node.js、Git、Hexo这几个软件并提前在GitHub官网上注册好账号 安装Git直接去Git官网下载就好了，除了安装地址，其它设置都按默认的来，一直点next即可 安装Node.js一样地，也是去官网下载，然后一路next点到底 安装Hexo打开终端下的命令行界面，windows系统可以直接在左下角的搜索框中搜索cmd字样并回车，也可以用win+R的组合键再输入cmd打开，再在其中输入代码npm install -g hexo-cli，它就会自动帮你装好了，如下图： 注册Github账号事实上，每一个网站都有大量的资源文件需要进行存储，所以很多网站都会向提供商购买主机空间，但由于我们是个人博客，存储的资源并没有那么多，因此我们可以借用一下GitHub的免费网页服务，基本上也是够用的。注册账号的话上官网就好了，记得用户名不要出现中文。 配置本地博客首先在你的D盘或者E盘新建一个Hexo文件夹，然后再在Hexo文件夹上面的地址栏（也就是显示Hexo绝对路径的地方）里输入cmd，打开此目录下的命令行窗口，输入以下代码（所有的指令都是一行一行输入）： 1234hexo i blog //i是init的缩写 blog是项目名，代表在Hexo文件夹下再新建一个blog文件夹cd blog //切换到blog目录下hexo g //generetor的缩写，生成代码hexo s //server的缩写，部署在服务器上 正常情况下，每执行完一条语句就会有很多串代码，如果没有明显的fatal或failed等字样应该就没啥问题，同时我们在地址栏输入localhost:4000进行跳转查看，如果上面没啥问题的话，界面应该是这样的（盗用了一张别人的图，侵删）： 更改主题相信你也发现了，Hexo自带的原生主题其实是蛮丑的，所以我们可以换一个好看一些的主题。关于主题，GitHub上有很多资源包，我比较喜欢的是yilla与next。首先我们用cd themes命令进入到themes文件夹下，再将主题包从Github上克隆下来： yilia: 1git clone https://github.com/litten/hexo-theme-yilia.git next: 1git clone https://github.com/theme-next/hexo-theme-next themes/next 由于我自己使用的是next主题，所以我接下来的一系列设置都针对的是next，如果您喜欢的是yilia或者其它主题，可以另外寻找一下教程。 这时我们会发现在blog的themes目录下已经出现了一个next文件夹，而这就是我们的主题包。接下来我们介绍配置文件_config.yml，实际上它有两个，一个在blog目录下，称为站点配置文件；而另一个在next文件夹下，称为主题配置文件，这两个文件很重要，修改的时候一定要注意是改哪一个！ 此外，next下还细分了四种主题：Muse、Mist、Pisces与Gemini，默认的是Muse，不过我觉得Pisces和Gemini更好看（我用的是Gemini，不过我发现Pisces和Gemini一样的啊），可以自己在主题配置文件中改一改看一看： 每次修改完后，我们都需要重新生成代码并部署到本地服务器上进行更新： 123hexo clean //清除之前生成的代码hexo g //重新生成代码hexo s //部署到本地服务器 最后跳转到localhost:4000网页进行查看next的主题效果。 配置Github PagesGithub有专为网页服务的个人仓库，因此我们首先创建一个个人仓库，点击个人主页的右上角Create a repositor ，进入如下页面： 我的界面是翻译后的，所以显示的是中文，相信英文界面你们也能看懂！这里需要注意的是仓库的名字格式必须为你的用户名.github.io，然后其它的部分可以仿照我的进行勾选。接下来我们再更改仓库的设置，点击如下图的设置： 下拉到Github Pages选项，并点击choose a theme： 然后在如下界面中随便选择一个主题进行应用，当然最终这个会被next替换的： 主题应用完之后，我们可以在地址栏输入你的用户名.github.io进行跳转访问，这时你就能看到Github给你提供的免费个人博客网页啦，接下来我们要做的就是把自己的网页主题更改成next。 配置SSH首先执行下面的命令生成SSH： 1ssh-keygen 按三次回车，即可生成id_rsa.pub文件，如果你的电脑装有vim编译器，你可以用指令vim ~/.ssh/id_rsa.pub查看文件中的内容并进行复制；如果你没有vim，你可以使用搜索软件搜索到本地的id_rsa.pub文件再打开查看（搜索软件推荐everything，查看编辑软件推荐sublime text）。复制文件中的所有内容，并在Github的个人主页中点击设置，再在左侧的个人设置中点击选项SSH和GPG keys，然后点击右侧的New SSH key，出现如下界面： 此时我们需要把从id_rsa.pub文件中复制的内容粘贴到下面的key框中，其中title可以随意填写，再点击Add SSH key即可。 同时，为了验证SSH是否已经配置好，我们可以输入如下指令： 1ssh -T git@github.com 如果出现了类似的如下信息，即代表配置成功： 1Hi Cyprus-hy! You&apos;ve successfully authenticated, but GitHub does not provide shell access. 配置本地Hexo首先我们打开站点配置文件，仿照我的格式对Deployment部分做如下修改： 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repository: https://github.com/Cyprus-hy/Cyprus-hy.github.io.git branch: master 注意仓库内填入你自己的用户名以及切记冒号后的空格！！！ 接下来我们安装一个插件，它可以将你在本地Hexo文件夹中的修改自动同步到Github的个人博客仓库中： 1npm install hexo-deployer-git --save 然后重新生成代码并部署到GitHub的服务器上（注意掌握这三句指令，任何修改都需要在服务器上重新部署）： 123hexo cleanhexo ghexo d //部署指令，注意这里是d而不是s 最后我们再次访问地址你的用户名.github.io就会发现你的博客页面已经变成next主题啦。 域名解析]]></content>
      <categories>
        <category>博客教程</category>
      </categories>
      <tags>
        <tag>Github Pages</tag>
        <tag>Hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F10%2F04%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
